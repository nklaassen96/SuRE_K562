> ### TO DO:
> ### variant annotation is not yet correct as the multiple alleles lead to differen granges. 
> ### plus and minus strand is NOT GOOD ANNOTATED
> 
> # Script to calculate p-values between alternative and reference sequence
> 
> # Load the required libraries
> library(data.table)
> library(tidyverse)
> library(foreach)
> library(doMC)
> registerDoMC(cores = 23)
> 
> # Loop through all files (1 file per chromosome)
> 
> dir.input  = "/DATA/usr/n.klaassen/projects/SuRE_K562/data/interim/SuRE_Indels_gDNA_Count/SuRE_combined/sure.snp_indel.combined.chrom."
> dir.output = "/DATA/usr/n.klaassen/projects/SuRE_K562/data/interim/SuRE_Indels_pvalue/"
> 
> print(paste("start function at", Sys.time()))
[1] "start function at 2019-10-18 23:47:34"
> 
> 
> 
> foreach(k=c(1:22,"X")) %dopar% {
+   #for (k in c(1:22,"X")) {
+   
+   file.name <- paste0(dir.input, k, ".RDS")  
+   counts.df <- as.data.frame(readRDS(file = file.name))
+   
+   
+   
+   
+   # Get the indel.ids of the indels that have reads for reference and alternative alleles and
+   # construct a new dataframe with only these indels. 
+   
+   snp_indel.ids.vector <- names(which(tapply(counts.df$SNP_VAR, counts.df$SNP_ID, function(x) {all(c(0,1) %in% x)} ) == TRUE))
+   snp_indel.df <- counts.df[counts.df$SNP_ID %in% snp_indel.ids.vector,]
+   
+   
+   
+   # Generate an empty results dataframe for the indels 
+   
+   results.indel <- data.frame(matrix(nrow = length(snp_indel.ids.vector), ncol = 19))
+   colnames(results.indel) <- c("SNP_ID","snp.type", "chrom", "pos", "ref.element.count", "alt.element.count", "K562.cDNA.ref.mean","K562.cDNA.alt.mean", "K562.cDNA.ref.median", "K562.cDNA.alt.median", "HepG2.cDNA.ref.mean","HepG2.cDNA.alt.mean","HepG2.cDNA.ref.median", "HepG2.cDNA.alt.median", "K562.wilcoxon.pvalue", "HepG2.wilcoxon.pvalue", "K562.wilcoxon.pvalue.random", "HepG2.wilcoxon.pvalue.random")
+   
+ 
+   
+   ############################################
+   # Start actual loop through all the Indels and SNPS #
+   ############################################
+   
+   
+   
+   for (i in 1:length(snp_indel.ids.vector)){
+     #if (i %% 50 == 0){print(i)}
+     snp.idx <- which(snp_indel.df$SNP_ID == snp_indel.ids.vector[i])
+     
+     ref <- which(snp_indel.df[snp.idx, "SNP_VAR"] == 0)
+     alt <- which(snp_indel.df[snp.idx, "SNP_VAR"] == 1)
+     
+     ref.random <- sample(c(ref,alt), size = length(ref))
+     alt.random <- c(ref,alt)[!c(ref,alt)%in%ref.random]
+     
+     # Construct results dataframe
+     results.indel[i,"SNP_ID"]  <- snp_indel.df[snp.idx[1], "SNP_ID"]
+     results.indel[i,"chrom"]   <- str_remove_all(string = snp_indel.df[snp.idx[1], "chrom"], pattern = "[_maternalpaternal]")
+     results.indel[i,"pos"]     <- snp_indel.df[snp.idx[1], "SNP_ABS_POS_hg19"]
+     results.indel[i,"snp.type"]<- snp_indel.df[snp.idx[1], "SNP_TYPE"]
+     
+     results.indel[i,"ref.element.count"] <- length(ref)
+     results.indel[i,"alt.element.count"] <- length(alt)
+     
+     results.indel[i,"K562.cDNA.ref.mean"] <- mean(snp_indel.df[snp.idx[ref], "cDNA.K562.norm.ipcr"])
+     results.indel[i,"K562.cDNA.alt.mean"] <- mean(snp_indel.df[snp.idx[alt], "cDNA.K562.norm.ipcr"])
+     results.indel[i,"K562.cDNA.ref.median"] <- median(snp_indel.df[snp.idx[ref], "cDNA.K562.norm.ipcr"])
+     results.indel[i,"K562.cDNA.alt.median"] <- median(snp_indel.df[snp.idx[alt], "cDNA.K562.norm.ipcr"])
+     
+     
+     results.indel[i,"HepG2.cDNA.ref.mean"] <- mean(snp_indel.df[snp.idx[ref], "cDNA.HepG2.norm.ipcr"])
+     results.indel[i,"HepG2.cDNA.alt.mean"] <- mean(snp_indel.df[snp.idx[alt], "cDNA.HepG2.norm.ipcr"])
+     results.indel[i,"HepG2.cDNA.ref.median"] <- median(snp_indel.df[snp.idx[ref], "cDNA.HepG2.norm.ipcr"])
+     results.indel[i,"HepG2.cDNA.alt.median"] <- median(snp_indel.df[snp.idx[alt], "cDNA.HepG2.norm.ipcr"])
+     
+     results.indel[i,"K562.wilcoxon.pvalue"] <-  wilcox.test(snp_indel.df[snp.idx[ref], "cDNA.K562.norm.ipcr"], snp_indel.df[snp.idx[alt], "cDNA.K562.norm.ipcr"])$p.value
+     results.indel[i,"HepG2.wilcoxon.pvalue"] <- wilcox.test(snp_indel.df[snp.idx[ref], "cDNA.HepG2.norm.ipcr"], snp_indel.df[snp.idx[alt], "cDNA.HepG2.norm.ipcr"])$p.value
+     results.indel[i,"K562.wilcoxon.pvalue.random"] <- wilcox.test(snp_indel.df[snp.idx[ref.random], "cDNA.K562.norm.ipcr"], snp_indel.df[snp.idx[alt.random], "cDNA.K562.norm.ipcr"])$p.value
+     results.indel[i,"HepG2.wilcoxon.pvalue.random"] <- wilcox.test(snp_indel.df[snp.idx[ref.random], "cDNA.HepG2.norm.ipcr"], snp_indel.df[snp.idx[alt.random], "cDNA.HepG2.norm.ipcr"])$p.value
+     
+   
+   } # end for-loop through snps
+   
+   file.name <- paste0(dir.output, "sure.snp_indel.dataframe.pvalue.chrom.", k,".RDS")
+   saveRDS(object = results.indel, file = file.name)
+   print(paste("end function chrom",k, Sys.time()))
+   
+ } # end foreach-loop through files
[1] "end function chrom X 2019-10-18 23:47:34"
[1] "end function chrom 1 2019-10-18 23:47:34"
[1] "end function chrom 2 2019-10-18 23:47:34"
